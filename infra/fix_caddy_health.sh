#!/bin/bash

echo "๐ ะะตัะตัะพะด ะฒ ะดะธัะตะบัะพัะธั ะฟัะพะตะบัะฐ..."
cd /opt/leadgateway/infra || {
  echo "โ ะะต ัะดะฐะปะพัั ะฟะตัะตะนัะธ ะฒ /opt/leadgateway/infra"
  exit 1
}

FILE="docker-compose.override.yml"

# ๐ ะัะบะฐะฟ
if [[ -f $FILE ]]; then
  echo "๐งพ ะกะพะทะดะฐั ัะตะทะตัะฒะฝัั ะบะพะฟะธั $FILE..."
  cp "$FILE" "$FILE.bak.$(date +%s)"
else
  echo "โ ะคะฐะนะป $FILE ะฝะต ะฝะฐะนะดะตะฝ!"
  exit 1
fi

# ๐งฉ ะะพะฑะฐะฒะธะผ ะธะปะธ ะทะฐะผะตะฝะธะผ healthcheck ะฒ ะฑะปะพะบะต caddy
echo "โ ะะพะฑะฐะฒะปัั healthcheck ะฒ ัััะตััะฒัััะธะน ะฑะปะพะบ caddy..."

awk '
BEGIN { in_caddy = 0 }
/^[[:space:]]*caddy:$/ { in_caddy = 1; print; next }
/^[[:space:]]*[a-zA-Z0-9_-]+:$/ { in_caddy = 0; print; next }
in_caddy && /^[[:space:]]*healthcheck:/ { skip = 1 }
in_caddy && skip && /^[[:space:]]+[a-z]+:/ { next }
{
  if (in_caddy && !skip && $0 ~ /^[[:space:]]+[a-zA-Z]+:/) {
    print "    healthcheck:"
    print "      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost\"]"
    print "      interval: 30s"
    print "      timeout: 10s"
    print "      retries: 3"
    print ""
    skip = 1
  }
  print
}
' "$FILE" > "${FILE}.tmp" && mv "${FILE}.tmp" "$FILE"

echo "โ Healthcheck ะดะพะฑะฐะฒะปะตะฝ ะฒ $FILE"

# ๐ ะะตัะตะทะฐะฟััะบ Caddy
echo "๐ ะะตัะตะทะฐะฟััะบ ะบะพะฝัะตะนะฝะตัะฐ Caddy..."
docker compose up -d --force-recreate caddy

echo "โณ ะะถะธะดะฐะฝะธะต 10 ัะตะบัะฝะด..."
sleep 10

# ๐ ะัะพะฒะตัะบะฐ
echo "๐ ะกัะฐััั ะบะพะฝัะตะนะฝะตัะฐ Caddy:"
docker compose ps caddy

echo "๐ ะะพะณะธ Caddy:"
docker compose logs --tail=20 caddy
